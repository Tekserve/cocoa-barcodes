{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Arial-Black;\f2\fswiss\fcharset0 ArialMT;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12160\viewh11060\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc

\f0\fs24 \cf0 {{\NeXTGraphic pastedGraphic.tiff \width7320 \height1020
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\

\b 10/23/2008 - Turned into open source project on Google Code. This file needs to be updated.
\b0 \
\

\f1\b\fs36 Barcode Generator v1.0b8\

\f2\fs24 \

\b0 This is the eighth beta release of Barcode Generator, a free, open-source Cocoa program that (surprise!) generates barcodes. It supports many of the more common one-dimensional linear barcodes in use today, allows you to export a barcode as a TIFF, EPS, or PDF image, to copy the barcode image to the pasteboard, or to drag it to any other application that accepts standard OS X PDF data from the pasteboard, including TextEdit. You can also print barcodes directly to any supported printer. Please note that you may not be able to create readable barcodes at all bar widths allowed by a specification. For example, Code 3 of 9 allows a bar width of as small as 7.5 mils, but I haven't had much luck going smaller than 13 mils on ink jet printers.\
\
You have a fair amount of control over the final appearance of the barcode, including the bar width (in 1/10 mil increments), bar height, font size, and captioning. The following barcode types are supported:\
\
Code 3 of 9 \
Extended Code 3 of 9\
Code 128\
Interleaved 2 of 5\
Industrial 2 of 5\
Codabar\
PostNet\
Modified Plessey\
Modified Plessey (hexadecimal)\
UPC-A\
UPC-E\
EAN-13\
EAN-8\
Royal Mail Barcode (also known as RM4SCC or CBC)\
Planet Barcode\
Japan Post Barcode\
\
\
Barcode Generator began its life as a test scaffold for a set of Cocoa classes I am writing (and which will evenutally become a Cocoa framework for generating barcodes). I did not initially intend to release it as a standalone program, but it has most of the features available on other OS X barcode programs. Additionally, I need help debugging the classes. You see: I do not have the equipment necessary to read all the types of barcodes that I've written classes for, so currently have no way to validate them other than to compare the output with existing barcodes from various sources.\
\
Barcode Generator is free and will remain free, even after it is complete. The source code is available under a non-restrictive license that allows you to do basically anything you want with the code except pass my work (and that of other contributors to the project) off as your own. \
\
I've been able to do some testing on the UPC-A, UPC-E, Code 39, and Interleaved Two of Five classes thanks to my local Radio Shack and the witless and thankfully defunct Digital Convergence. The other classes are essentially untested, so the one thing that I am asking in return is that if you use Barcode Generator or the source code, please provide me feedback so I can correct and improve the code.\
\
There is, of course, no warranty with this software nor with the code. Use it at your own risk. I encourage feedback, and will attempt to answer any questions posed if possible. \
\
Send questions or comments to jeff_lamarche@mac.com.\
\

\f3 Known Issues\
------------\
There is a problem with the font embedding in EPS export. In most cases, problems can be solved by using copy/paste, drag/drop, or by using PDF instead of EPS. The problem seems to be in Apple-provided code for generating EPS data from view. I think the method I'm using is a holdover from the Display Postscript days, and (although not listed as deprecated) it does not look like this method has been maintained. PDF output is recommended for all situation where resolution-independence needs to be maintained.
\f2 \
\

\f3 Version History\
---------------\
1.0b1 Initial public release\
1.0b2 Added icon (provided by Jeff Senter)\
      Corrected UPC-A checksum algorithm (new algorithm provided by \
	  Charles Bennett)\
1.0b3 Applied UPC-A checksum algorithm correction to EAN-13 and added \
	  enforcement of correct check-digit for UPC-A and EAN-13\
1.0b4 Font size controls now becomes disabled when PostNet is selected\
	  The user-defined fixed-pitch font is used rather than the hardcoded "Geneva"\
	  font that was used in earlier versions for captions\
1.0b5 Fixed a problem where font-size controls failed to ungray. Added support for \
	  Royal Mail Barcode (thanks to Trevor Strohman). Incorporated changes to\
	  drawing algorithm for consistency (also thanks to Trevor Strohman). Updated\
	  developer documentation  (source distribution only) for changes made to \
	  this point. Replaced a few missed occurrences of hardcoded "Geneva" font.\
	  Added support for "Planet" barcode symbology thanks to Daniel Paquette.\
	  Fixed the Postnet code - the first bar of Postnet should always be a tall bar\
	  but NKDPostnetBarcode was making bar index 1 (the gap rather than the bar) tall\
	  rather than bar index 0 which is the initiating bar. Modified the copy and\
	  drag source code to work around the fact that some applications rasterize\
	  PDF data from the Pasteboard (which, by the way, only seems to solve the\
	  problem for copy but not for drag)\
1.0b6 Added the ability to choose between inches and centimeters for bar height; \
	  added code so previous height, width, symbology, and content are remembered\
	  from previous session.\
1.0b7 Added Japanese localization (thanks to Sato Akira)\
1.0b8 Updated Japanese localization and added support for the Japan Post Barcode,\
	  symbology, added better captioning mechanism, especially for symbologies \
	  with a center "break" (UPC-A, EAN-13) (thanks again to Sato Akira for both \
	  of these). Fixed a bug with the width, height, and font-size controls where\
	  using the steppers caused the value to jump unexpectedly to the default values.
\f0 \
}